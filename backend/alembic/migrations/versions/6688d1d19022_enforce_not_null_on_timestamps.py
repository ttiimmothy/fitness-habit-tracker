"""enforce NOT NULL on timestamps

Revision ID: 6688d1d19022
Revises: 0001_init
Create Date: 2025-09-07 15:27:42.892691

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6688d1d19022'
down_revision: Union[str, Sequence[str], None] = '0001_init'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
  # Backfill to avoid failing SET NOT NULL
  op.execute("UPDATE users      SET created_at = NOW() WHERE created_at IS NULL;")
  op.execute("UPDATE habits     SET created_at = NOW() WHERE created_at IS NULL;")
  op.execute("UPDATE habit_logs SET created_at = NOW() WHERE created_at IS NULL;")
  op.execute("UPDATE badges     SET achieved_at = NOW() WHERE achieved_at IS NULL;")
    
  """Upgrade schema."""
  # ### commands auto generated by Alembic - please adjust! ###
  op.alter_column('badges', 'achieved_at',
              existing_type=postgresql.TIMESTAMP(timezone=True),
              nullable=False,
              existing_server_default=sa.text('now()'))
  op.alter_column('habit_logs', 'created_at',
              existing_type=postgresql.TIMESTAMP(timezone=True),
              nullable=False,
              existing_server_default=sa.text('now()'))
  op.alter_column('habits', 'created_at',
              existing_type=postgresql.TIMESTAMP(timezone=True),
              nullable=False,
              existing_server_default=sa.text('now()'))
  op.alter_column('users', 'created_at',
              existing_type=postgresql.TIMESTAMP(timezone=True),
              nullable=False,
              existing_server_default=sa.text('now()'))
  # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('habits', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('habit_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('badges', 'achieved_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
